
name: ServiceNow GitHub Actions Demo

on:
  workflow_dispatch:
    inputs:
      triggerRollback:
        description: "Trigger rollback to previous version"
        required: true
        default: false
      rollback_version:
        description: "Enter the previous version to rollback " 
        requried : true
        default: 1.1.93

jobs:
  Git-checkout:
    name: Git-checkout
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow CI/CD Git-checkout Stage
        run: echo "Pulling latest code from Github"

  build:
    needs: Git-checkout
    if: ${{ github.event.inputs.triggerRollback != 'true' }}
    name: Publish from Dev
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@2.0.0
        env:
          nowUsername: ${{ secrets.NOW_USERNAME1 }}
          nowPassword: ${{ secrets.NOW_PASSWORD1 }}
          nowSourceInstance: ${{ secrets.NOW_SOURCE_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@2.0.1
        with:
          versionTemplate: 1.1
          versionFormat: template
        env:
          nowUsername: ${{ secrets.NOW_USERNAME1 }}
          nowPassword: ${{ secrets.NOW_PASSWORD1 }}
          nowSourceInstance: ${{ secrets.NOW_SOURCE_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}

    outputs:
      publishversion: ${{ steps.publish_app.outputs.newVersion }}

  deployprod:
    needs: build
    if: ${{ github.event.inputs.triggerRollback != 'true' }}
    name: Deploy to Prod
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow CI/CD Install App
        id: install_app_prod
        uses: ServiceNow/sncicd-install-app@2.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
        env:
          nowUsername: ${{ secrets.NOW_USERNAME2 }}
          nowPassword: ${{ secrets.NOW_PASSWORD2 }}
          nowInstallInstance: ${{ secrets.NOW_TARGET_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}

  rollbackApp:
    needs: Git-checkout
    if: ${{ github.event.inputs.triggerRollback == 'true' }}
    name: Rollback App to Previous Version
    runs-on: ubuntu-latest
    steps:
      - name: Rollback Application
        uses: ServiceNow/sncicd-rollback-app@2.0.0
        with:
          version: ${{inputs.rollback_version}} 
        env:
          nowUsername: ${{ secrets.NOW_USERNAME2 }}
          nowPassword: ${{ secrets.NOW_PASSWORD2 }}
          nowInstallInstance: ${{ secrets.NOW_TARGET_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}

  Notify:
    needs: [rollbackApp,deployprod]
    if : always()
    runs-on: ubuntu-latest
    steps:
      - uses: martialonline/workflow-status@v3
        id: check
      - run: echo "Workflow  Failed" 
        if : steps.check.outputs.status =='failure'
      - run: echo "Workflow was cancelled" 
        if: steps.check.outputs.status == 'cancelled'
      - run: echo "Workflow is successful" 
        if: steps.check.outputs.status == 'success'
      - run : echo " ${{steps.check.outputs.status}}" 
      -  uses: neonidian/teams-notify-build-status@v3
         with:
          webhookUrl: ${{ secrets.TEAMS_WEBHOOK_URL }}
          message: "${{ github.job }} job in  workflow ${{ github.workflow }} of ${{ github.repository }} has ${{steps.check.outputs.status}} "
